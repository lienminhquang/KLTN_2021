@using FoodOrder.Core.Helpers;
@model PaginatedList<FoodOrder.Core.ViewModels.Addresses.AddressVM>



@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <h1 class="mt-4">List Address</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="index.html">Dashboard</a></li>
        <li class="breadcrumb-item active">List Address</li>
    </ol>
    <div class="card mb-4">
        <div class="card-header">

            @if ((await AuthorizationService.AuthorizeAsync(User, RoleTypes.Admin)).Succeeded)
            {
                <a asp-action="Create">Create New</a>
            }
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Items.FirstOrDefault().ID)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Items.FirstOrDefault().AppUserID)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Items.FirstOrDefault().Name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Items.FirstOrDefault().AddressString)
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Items != null)
                        {
                            @foreach (var item in Model.Items)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ID)
                                    </td>
                                    <td>
                                        @Html.ActionLink(item.AppUserID.ToString(), "Details", "User", new { id = item.AppUserID })
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Name)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.AddressString)
                                    </td>
                                    <td>
                                        <div class="dropdown">
                                            <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                Action
                                            </button>
                                            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                                <a class="dropdown-item btn btn-primary" href=@Url.Action("Details", new { id = item.ID })>Details</a>

                                                @if ((await AuthorizationService.AuthorizeAsync(User, RoleTypes.Admin)).Succeeded)
                                                {
                                                    <a class="dropdown-item btn btn-primary" href=@Url.Action("Delete", new { id = item.ID })>Delete</a>
                                                }
                                                @if ((await AuthorizationService.AuthorizeAsync(User, RoleTypes.Admin)).Succeeded)
                                                {
                                                    <a class="dropdown-item btn btn-primary" href=@Url.Action("Edit", new { id = item.ID })>Edit</a>
                                                }
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>