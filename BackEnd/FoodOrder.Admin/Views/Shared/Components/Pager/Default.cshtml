@model FoodOrder.Core.Helpers.PaginatedBase

@{
    var urlTemplate = Url.Action() + "?PageIndex={0}";
    var request = ViewContext.HttpContext.Request;

    foreach (var key in request.Query.Keys)
    {
        if (key == "PageIndex")
        {
            continue;
        }
        if (request.Query[key].Count > 1)
        {
            foreach (var item in (string[])request.Query[key])
            {
                urlTemplate += "&" + key + "=" + item;
            }
        }
        else
        {
            urlTemplate += "&" + key + "=" + request.Query[key];
        }
    }
    var startIndex = Math.Max(Model.PageIndex - 5, 1);
    var finishIndex = Math.Min(Model.PageIndex + 5, Model.TotalPage);
}

@if (Model.TotalPage > 1)
{
    <ul class="pagination">
        @if (Model.PageIndex != startIndex)
        {
            <li class="page-item">
                <a class="page-link" title="1" href="@urlTemplate.Replace("{0}", "1")">1</a>
            </li>
            <li class="page-item">
                <a class="page-link" href="@urlTemplate.Replace("{0}",(Model.PageIndex-1).ToString())">Previous</a>
            </li>
        }
        @for (int i = startIndex; i <= finishIndex; i++)
        {
            if (i == Model.PageIndex)
            {
                <li class="page-item active">
                    <a class="page-link" href"#">@i <span class="sr-only">(current)</span></a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" title="Page @i.ToString()" href="@urlTemplate.Replace("{0}",i.ToString())">@i</a>
                </li>
            }
        }
        @if (Model.PageIndex != finishIndex)
        {
            <li class="page-item">
                <a class="page-link" title="@Model.TotalPage.ToString()" href="@urlTemplate.Replace("{0}", (Model.PageIndex+1).ToString())">Next</a>
            </li>
            <li class="page-item">
                <a class="page-link" href="@urlTemplate.Replace("{0}", (Model.TotalPage.ToString()))">@Model.TotalPage.ToString()</a>
            </li>
        }
    </ul>
}
